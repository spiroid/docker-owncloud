# You may add here your
# server {
#       ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##


server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    server_name localhost;

    # Own cloud root directory
    root /var/www/html;
    index index.php;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/owncloud-access.log;
    error_log /var/log/nginx/owncloud-error.log;

    # Max upload size
    client_max_body_size 5G;
    fastcgi_buffers 64 4K;

    # Rewrites for Caldav, Webdav and Carddav
    rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;

    # Own cloud error pages
    error_page 403 = /core/templates/403.php;
    error_page 404 = /core/templates/404.php;

    # Allow public acces to the robot.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Never request these ressources directly
    location ~ ^/(data|config|\.ht|db_structure\.xml|README) {
            deny all;
    }

    location / {
            # The following 2 rules are only needed with webfinger
            rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
            rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

            rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
            rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

            rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ /index.php;
    }

    # Pass php script to php-fpm through local socket
    location ~ ^(.+?\.php)(/.*)?$ {
            # try_files $1 = 404;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$1;
            fastcgi_param PATH_INFO $2;
            # fastcgi_param HTTPS on;
            # fastcgi_param MOD_X_ACCEL_REDIRECT_ENABLED on;
            fastcgi_pass phpfpm:9000;
            # fastcgi_pass unix:/var/run/php5-fpm.sock;

            # fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    }

    # Set long EXPIRES header on static assets
    location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
            expires 30d;
            # Don't log access to assets
            access_log off;
    }

    # Hidden files (dot files)
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }
}
